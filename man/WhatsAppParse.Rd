% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WhatsAppParse.R
\name{WhatsAppParse}
\alias{WhatsAppParse}
\title{Parsing exported WhatsApp Textfiles as Dataframes}
\usage{
WhatsAppParse(name, EmojiDic = "internal", smilies = 2, anon = "add",
  media = TRUE, web = "domain", order = "both",
  language = "german", os = "android", rpnl = " start_newline ",
  rpom = " media_omitted ", ...)
}
\arguments{
\item{name}{the name of the exported Whatsapp textfile to be parsed as a character string}

\item{EmojiDic}{Dictionary for Emoji matching. Can use a version included in this package when set to "interal" or
an updated dataframe created by \code{\link[WhatsR]{FetchEmojis}}}

\item{smilies}{1 uses \code{\link[qdapRegex]{ex_emoticon}} to extract smilies, 2 uses a more inclusive custom list
of smilies containing all mentions from https://de.wiktionary.org/w/index.php?title=Verzeichnis:International/Smileys
and manually added ones}

\item{anon}{TRUE results in the vector of sender names being anonymized, FALSE displays the actual names, "add" adds a
column of anomyized names next to the actual names}

\item{media}{TRUE/FALSE indicates whether the chatlog was downloaded with or without mediafiles. If TRUE, names of
attached mediafiles will be extracted into a seperate column.}

\item{web}{"domain" will shorten sent links to domains, "url" will display the full URL}

\item{order}{determines how the messages are ordered. "display" order them in the same order that they appear on the phone
that the messages were exported from. "time" orders the messages according to the WhatsApp Timestamp the message received while it was sent.
Due to internet problems, these orders are not necessarily interchangeable. "both" gives two columns with the respective orders}

\item{language}{indicates the language of WhatsApp on the phone with which the messages were exported. This is important because
it changes the structure of date/time columns and indicators for sent media. Currently, "english" and "german" are available.}

\item{os}{operating system of the phone the chat was exported from. Supports "android" or "iOS"}

\item{rpnl}{newline replace. A character string for replacing linebreaks within messages for the parsed message for better readibility}

\item{rpom}{replace omitted media. A character string replacing the indicator for omitted media files for better readibility}

\item{...}{further arguments passed down to ReplaceEmoji()}
}
\value{
A dataframe containing:
     1) A timestamp of when the message was sent
     2) The name of the sender (can be anonymized)
     3) The body of the message. Linebreaks and Emojis are replaced with textual indicators
     4) A list of Emojis contained in the message
     5) A list of ASCII smilies contained in the message
     6) An indicator stating whether media files were included in the message
     7) A list of domains/webpages from sent links contained in the message
}
\description{
Creates a dataframe from an exported WhatsApp textfile containing one row per message. Some columns
were saved as lists using the I() function so that multiple elements could be stored per message, while still maintaining
the general structure of one row per message. In your analysis, you should treat these columns as lists or unlist them first.
}
\examples{
 Df <- WhatsAppParse(system.file("englishandroid24h.txt", package = "WhatsR"),
                    media = TRUE,
                    language = "english")
}
